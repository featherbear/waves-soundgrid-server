Description: fix denial of service and possible code execution via readdir_r
Origin: backport, https://sourceware.org/git/gitweb.cgi?p=glibc.git;h=91ce40854d0b7f865cf5024ef95a8026b76096f3
Bug: http://sourceware.org/bugzilla/show_bug.cgi?id=14699
Bug-Debian: http://bugs.debian.org/cgi-bin/bugreport.cgi?bug=719558

Index: eglibc-2.15/sysdeps/unix/dirstream.h
===================================================================
--- eglibc-2.15.orig/sysdeps/unix/dirstream.h	2013-09-27 13:45:56.516965819 -0400
+++ eglibc-2.15/sysdeps/unix/dirstream.h	2013-09-27 13:45:56.496965818 -0400
@@ -40,6 +40,8 @@
 
     off_t filepos;		/* Position of next entry to read.  */
 
+    int errcode;		/* Delayed error code.  */
+
     /* Directory block.  */
     char data[0] __attribute__ ((aligned (__alignof__ (void*))));
   };
Index: eglibc-2.15/sysdeps/unix/opendir.c
===================================================================
--- eglibc-2.15.orig/sysdeps/unix/opendir.c	2013-09-27 13:45:56.516965819 -0400
+++ eglibc-2.15/sysdeps/unix/opendir.c	2013-09-27 13:45:56.496965818 -0400
@@ -226,6 +226,7 @@
   dirp->size = 0;
   dirp->offset = 0;
   dirp->filepos = 0;
+  dirp->errcode = 0;
 
   return dirp;
 }
Index: eglibc-2.15/sysdeps/unix/readdir_r.c
===================================================================
--- eglibc-2.15.orig/sysdeps/unix/readdir_r.c	2013-09-27 13:45:56.516965819 -0400
+++ eglibc-2.15/sysdeps/unix/readdir_r.c	2013-09-27 13:45:56.496965818 -0400
@@ -42,6 +42,7 @@
   DIRENT_TYPE *dp;
   size_t reclen;
   const int saved_errno = errno;
+  int ret;
 
   __libc_lock_lock (dirp->lock);
 
@@ -72,10 +73,10 @@
 		  bytes = 0;
 		  __set_errno (saved_errno);
 		}
+	      if (bytes < 0)
+		dirp->errcode = errno;
 
 	      dp = NULL;
-	      /* Reclen != 0 signals that an error occurred.  */
-	      reclen = bytes != 0;
 	      break;
 	    }
 	  dirp->size = (size_t) bytes;
@@ -108,29 +109,46 @@
       dirp->filepos += reclen;
 #endif
 
-      /* Skip deleted files.  */
+#ifdef NAME_MAX
+      if (reclen > offsetof (DIRENT_TYPE, d_name) + NAME_MAX + 1)
+	{
+	  /* The record is very long.  It could still fit into the
+	     caller-supplied buffer if we can skip padding at the
+	     end.  */
+	  size_t namelen = _D_EXACT_NAMLEN (dp);
+	  if (namelen <= NAME_MAX)
+	    reclen = offsetof (DIRENT_TYPE, d_name) + namelen + 1;
+	  else
+	    {
+	      /* The name is too long.  Ignore this file.  */
+	      dirp->errcode = ENAMETOOLONG;
+	      dp->d_ino = 0;
+	      continue;
+	    }
+	}
+#endif
+
+      /* Skip deleted and ignored files.  */
     }
   while (dp->d_ino == 0);
 
   if (dp != NULL)
     {
-#ifdef GETDENTS_64BIT_ALIGNED
-      /* The d_reclen value might include padding which is not part of
-	 the DIRENT_TYPE data structure.  */
-      reclen = MIN (reclen,
-		    offsetof (DIRENT_TYPE, d_name) + sizeof (dp->d_name));
-#endif
       *result = memcpy (entry, dp, reclen);
-#ifdef GETDENTS_64BIT_ALIGNED
+#ifdef _DIRENT_HAVE_D_RECLEN
       entry->d_reclen = reclen;
 #endif
+      ret = 0;
     }
   else
-    *result = NULL;
+    {
+      *result = NULL;
+      ret = dirp->errcode;
+    }
 
   __libc_lock_unlock (dirp->lock);
 
-  return dp != NULL ? 0 : reclen ? errno : 0;
+  return ret;
 }
 
 #ifdef __READDIR_R_ALIAS
Index: eglibc-2.15/sysdeps/unix/rewinddir.c
===================================================================
--- eglibc-2.15.orig/sysdeps/unix/rewinddir.c	2013-09-27 13:45:56.516965819 -0400
+++ eglibc-2.15/sysdeps/unix/rewinddir.c	2013-09-27 13:45:56.496965818 -0400
@@ -34,6 +34,7 @@
   dirp->filepos = 0;
   dirp->offset = 0;
   dirp->size = 0;
+  dirp->errcode = 0;
 #ifndef NOT_IN_libc
   __libc_lock_unlock (dirp->lock);
 #endif
Index: eglibc-2.15/sysdeps/unix/sysv/linux/i386/readdir64_r.c
===================================================================
--- eglibc-2.15.orig/sysdeps/unix/sysv/linux/i386/readdir64_r.c	2013-09-27 13:45:56.516965819 -0400
+++ eglibc-2.15/sysdeps/unix/sysv/linux/i386/readdir64_r.c	2013-09-27 13:45:56.496965818 -0400
@@ -19,7 +19,6 @@
 #define __READDIR_R __readdir64_r
 #define __GETDENTS __getdents64
 #define DIRENT_TYPE struct dirent64
-#define GETDENTS_64BIT_ALIGNED 1
 
 #include <sysdeps/unix/readdir_r.c>
 
Index: eglibc-2.15/sysdeps/unix/sysv/linux/wordsize-64/readdir_r.c
===================================================================
--- eglibc-2.15.orig/sysdeps/unix/sysv/linux/wordsize-64/readdir_r.c	2013-09-27 13:45:56.516965819 -0400
+++ eglibc-2.15/sysdeps/unix/sysv/linux/wordsize-64/readdir_r.c	2013-09-27 13:46:20.344966429 -0400
@@ -1,5 +1,4 @@
 #define readdir64_r __no_readdir64_r_decl
-#define GETDENTS_64BIT_ALIGNED 1
 #include <sysdeps/unix/readdir_r.c>
 #undef readdir64_r
 weak_alias (__readdir_r, readdir64_r)
