Description: fix alignment issue causing a readdir regression on sparc.
Origin: backport, https://sourceware.org/git/?p=glibc.git;h=75b4202ab03337edb37536e3d9470a48a04c9341

Index: eglibc-2.15/sysdeps/unix/dirstream.h
===================================================================
--- eglibc-2.15.orig/sysdeps/unix/dirstream.h	2014-07-25 13:21:06.726831895 -0400
+++ eglibc-2.15/sysdeps/unix/dirstream.h	2014-07-25 13:23:19.426831241 -0400
@@ -42,8 +42,13 @@
 
     int errcode;		/* Delayed error code.  */
 
-    /* Directory block.  */
-    char data[0] __attribute__ ((aligned (__alignof__ (void*))));
+    /* Directory block.  We must make sure that this block starts
+       at an address that is aligned adequately enough to store
+       dirent entries.  Using the alignment of "void *" is not
+       sufficient because dirents on 32-bit platforms can require
+       64-bit alignment.  We use "long double" here to be consistent
+       with what malloc uses.  */
+    char data[0] __attribute__ ((aligned (__alignof__ (long double))));
   };
 
 #define _DIR_dirfd(dirp)	((dirp)->fd)
