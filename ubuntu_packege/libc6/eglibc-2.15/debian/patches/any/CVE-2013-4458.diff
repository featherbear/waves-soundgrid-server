Description: fix denial of service via buffer overflow in getaddrinfo
Origin: backport, https://sourceware.org/git/?p=glibc.git;h=7cbcdb3699584db8913ca90f705d6337633ee10f
Bug: https://sourceware.org/bugzilla/show_bug.cgi?id=16072
Bug-Debian: http://bugs.debian.org/cgi-bin/bugreport.cgi?bug=727181

Index: eglibc-2.15/sysdeps/posix/getaddrinfo.c
===================================================================
--- eglibc-2.15.orig/sysdeps/posix/getaddrinfo.c	2014-07-25 13:24:56.546830763 -0400
+++ eglibc-2.15/sysdeps/posix/getaddrinfo.c	2014-07-25 13:27:45.454829931 -0400
@@ -196,7 +196,22 @@
 				&rc, &herrno, NULL, &localcanon));	      \
     if (rc != ERANGE || herrno != NETDB_INTERNAL)			      \
       break;								      \
-    tmpbuf = extend_alloca (tmpbuf, tmpbuflen, 2 * tmpbuflen);		      \
+    if (!malloc_tmpbuf && __libc_use_alloca (alloca_used + 2 * tmpbuflen))    \
+      tmpbuf = extend_alloca_account (tmpbuf, tmpbuflen, 2 * tmpbuflen,	      \
+				      alloca_used);			      \
+    else								      \
+      {									      \
+	char *newp = realloc (malloc_tmpbuf ? tmpbuf : NULL,		      \
+			      2 * tmpbuflen);				      \
+	if (newp == NULL)						      \
+	  {								      \
+	    result = -EAI_MEMORY;					      \
+	    goto free_and_return;					      \
+	  }								      \
+	tmpbuf = newp;							      \
+	malloc_tmpbuf = true;						      \
+	tmpbuflen = 2 * tmpbuflen;					      \
+      }									      \
   }									      \
   if (status == NSS_STATUS_SUCCESS && rc == 0)				      \
     h = &th;								      \
@@ -208,7 +223,8 @@
 	{								      \
 	  __set_h_errno (herrno);					      \
 	  _res.options |= old_res_options & RES_USE_INET6;		      \
-	  return -EAI_SYSTEM;						      \
+	  result = -EAI_SYSTEM;						      \
+	  goto free_and_return;						      \
 	}								      \
       if (herrno == TRY_AGAIN)						      \
 	no_data = EAI_AGAIN;						      \
