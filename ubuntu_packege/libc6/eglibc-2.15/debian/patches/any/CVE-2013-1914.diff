Description: fix denial of service in getaddrinfo
Origin: backport, https://sourceware.org/git/?p=glibc.git;a=commit;h=1cef1b19089528db11f221e938f60b9b048945d7
Origin: backport, https://sourceware.org/git/?p=glibc.git;a=commit;h=2169712d9c140d1b011470393c64258b2db3a4cd
Bug: http://sourceware.org/bugzilla/show_bug.cgi?id=15330
Bug-Debian: http://bugs.debian.org/cgi-bin/bugreport.cgi?bug=704623

Index: eglibc-2.15/sysdeps/posix/getaddrinfo.c
===================================================================
--- eglibc-2.15.orig/sysdeps/posix/getaddrinfo.c	2013-09-27 13:41:45.308959386 -0400
+++ eglibc-2.15/sysdeps/posix/getaddrinfo.c	2013-09-27 13:41:45.300959386 -0400
@@ -2447,11 +2447,28 @@
       __typeof (once) old_once = once;
       __libc_once (once, gaiconf_init);
       /* Sort results according to RFC 3484.  */
-      struct sort_result results[nresults];
-      size_t order[nresults];
+      struct sort_result *results;
+      size_t *order;
       struct addrinfo *q;
       struct addrinfo *last = NULL;
       char *canonname = NULL;
+      bool malloc_results;
+      size_t alloc_size = nresults * (sizeof (*results) + sizeof (size_t));
+
+      malloc_results
+	= !__libc_use_alloca (alloc_size);
+      if (malloc_results)
+	{
+	  results = malloc (alloc_size);
+	  if (results == NULL)
+	    {
+	      __free_in6ai (in6ai);
+	      return EAI_MEMORY;
+	    }
+	}
+      else
+	results = alloca (alloc_size);
+      order = (size_t *) (results + nresults);
 
       /* Now we definitely need the interface information.  */
       if (! check_pf_called)
@@ -2629,6 +2646,9 @@
 
       /* Fill in the canonical name into the new first entry.  */
       p->ai_canonname = canonname;
+
+      if (malloc_results)
+	free (results);
     }
 
   __free_in6ai (in6ai);
