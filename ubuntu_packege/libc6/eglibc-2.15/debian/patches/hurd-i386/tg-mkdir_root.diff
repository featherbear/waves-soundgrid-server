From: Samuel Thibault <samuel.thibault@ens-lyon.org>
Subject: [PATCH] Fix mkdir / error value

(needed for busybox's mkdir -p)

In the / case, directory_name_split can't really split that into an
absolute ROOT file_t and ".", since name is supposed to be a pointer in
file_name... Changing the interface is being proposed.

---
 sysdeps/mach/hurd/mkdir.c   |    6 +++++-
 sysdeps/mach/hurd/mkdirat.c |    6 +++++-
 2 files changed, 10 insertions(+), 2 deletions(-)

diff --git a/sysdeps/mach/hurd/mkdir.c b/sysdeps/mach/hurd/mkdir.c
index b7e8074..cf6dda3 100644
--- a/sysdeps/mach/hurd/mkdir.c
+++ b/sysdeps/mach/hurd/mkdir.c
@@ -20,6 +20,7 @@
 #include <stddef.h>
 #include <sys/stat.h>
 #include <hurd.h>
+#include <string.h>
 
 /* Create a directory named FILE_NAME with protections MODE.  */
 int
@@ -29,7 +30,10 @@ __mkdir (file_name, mode)
 {
   error_t err;
   const char *name;
-  file_t parent = __directory_name_split (file_name, (char **) &name);
+  file_t parent;
+  if (!strcmp(file_name, "/"))
+    return EEXIST;
+  parent = __directory_name_split (file_name, (char **) &name);
   if (parent == MACH_PORT_NULL)
     return -1;
   err = __dir_mkdir (parent, name, mode & ~_hurd_umask);
diff --git a/sysdeps/mach/hurd/mkdirat.c b/sysdeps/mach/hurd/mkdirat.c
index a300745..8256ef8 100644
--- a/sysdeps/mach/hurd/mkdirat.c
+++ b/sysdeps/mach/hurd/mkdirat.c
@@ -23,6 +23,7 @@
 #include <sys/stat.h>
 #include <hurd.h>
 #include <hurd/fd.h>
+#include <string.h>
 
 int
 mkdirat (fd, path, mode)
@@ -32,7 +33,10 @@ mkdirat (fd, path, mode)
 {
   error_t err;
   const char *name;
-  file_t parent = __directory_name_split_at (fd, path, (char **) &name);
+  file_t parent;
+  if (!strcmp(path, "/"))
+    return EEXIST;
+  parent = __directory_name_split_at (fd, path, (char **) &name);
   if (parent == MACH_PORT_NULL)
     return -1;
   err = __dir_mkdir (parent, name, mode & ~_hurd_umask);
-- 
tg: (0234227..) t/mkdir_root (depends on: baseline)
